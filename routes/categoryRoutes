const express = require('express');
const router = express.Router();
const db = require('../models');
const Category = db.Category;

// Get all categories
router.get('/', async (req, res) => {
  try {
    const categories = await Category.findAll();
    res.status(200).json(categories);
  } catch (error) {
    console.error('Error fetching categories:', error);
    res
      .status(500)
      .json({ error: 'An error occurred while fetching categories.' });
  }
});

// Get a single category by ID
router.get('/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const category = await Category.findByPk(id);
    if (category) {
      res.status(200).json(category);
    } else {
      res.status(404).json({ error: 'Category not found.' });
    }
  } catch (error) {
    console.error('Error fetching category:', error);
    res
      .status(500)
      .json({ error: 'An error occurred while fetching the category.' });
  }
});

// Create a new category
router.post('/', async (req, res) => {
  const { CategoryName, UserID } = req.body;
  try {
    const newCategory = await Category.create({
      CategoryName,
      UserID,
    });
    res.status(201).json(newCategory);
  } catch (error) {
    console.error('Error creating category:', error);
    res
      .status(500)
      .json({ error: 'An error occurred while creating the category.' });
  }
});

// Update a category
router.put('/:id', async (req, res) => {
  const { id } = req.params;
  const updates = req.body;
  try {
    const [updated] = await Category.update(updates, {
      where: { CategoryID: id },
    });
    if (updated) {
      const updatedCategory = await Category.findByPk(id);
      res.status(200).json(updatedCategory);
    } else {
      res.status(404).json({ error: 'Category not found.' });
    }
  } catch (error) {
    console.error('Error updating category:', error);
    res
      .status(500)
      .json({ error: 'An error occurred while updating the category.' });
  }
});

// Delete a category
router.delete('/:id', async (req, res) => {
  const { id } = req.params;
  try {
    const deleted = await Category.destroy({
      where: { CategoryID: id },
    });
    if (deleted) {
      res.status(204).send();
    } else {
      res.status(404).json({ error: 'Category not found.' });
    }
  } catch (error) {
    console.error('Error deleting category:', error);
    res
      .status(500)
      .json({ error: 'An error occurred while deleting the category.' });
  }
});

module.exports = router;
